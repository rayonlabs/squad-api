services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: squad
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d squad"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_STORAGE_CLASS_REDIRECT_DISABLE: "true"
    entrypoint: ''
    command: bash -c 'mkdir -p /data/chutes && minio server /data'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: always

  redis:
    image: redis:7
    ports:
      - "127.0.0.1:6379:6379"
    command: ["redis-server", "--requirepass", "redispassword"]
    environment:
      - REDIS_PASSWORD=redispassword
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispassword", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  opensearch:
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms256m -Xmx256m
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - plugins.security.disabled=true
      - action.auto_create_index=*
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Sup3rSecureP@ssword!
    image: opensearchproject/opensearch:2.18.0
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    restart: always
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build:
      context: .
    volumes:
      - ./squad:/app/squad
      - ./migrations:/app/migrations
      - ./squad_priv.pem:/etc/jwt-cert/squad_priv.pem
      - ./squad_pub.pem:/etc/jwt-cert/squad_pub.pem
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/squad
      - REDIS_URL=redis://:redispassword@redis:6379/0
      - OPENSEARCH_URL=http://opensearch:9200
      ## If you have the actual JWT private cert for chutes auth.
      - JWT_PRIVATE_PATH=/etc/jwt-cert/squad_priv.pem
      - JWT_PUBLIC_PATH=/etc/jwt-cert/squad_pub.pem
      # Otherwise hack away with manual key.
      #- DEV_CHUTES_AUTH=${CHUTES_API_KEY}
      - X_API_TOKEN=${X_API_TOKEN}
      - X_API_KEY=${X_API_KEY}
      - X_APP_ID=${X_APP_ID}
      - X_CLIENT_ID=${X_CLIENT_ID}
      - X_CLIENT_SECRET=${X_CLIENT_SECRET}
      - OAUTHLIB_INSECURE_TRANSPORT="1"
      - DEVMODE="1"
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_REGION=us-east-1
      - STORAGE_BUCKET=chutes
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      minio:
        condition: service_started

volumes:
  postgres_data:
  opensearch_data:
  minio_data:
